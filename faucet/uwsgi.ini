[uwsgi]

#
# python/Django-related settings
#
# the base directory (full path)
chdir           = /data
# Django's wsgi file
module          = faucet.wsgi
; # the virtualenv (full path)
; virtualenv      = /code/venv

http            = 0.0.0.0:$(FAUCET_PORT)
static-map      = /static/=/data/static/

#
# process-related settings
#
# master process
master          = true
# maximum number of worker processes
processes       = 3
# number of gevent async cores to spawn
gevent          = 100
# number of cpus to dedicate per-worker
cpu-affinity    = 1
# the socket (use the full path to be safe
#socket          = /code/run/uwsgi.sock
# write pid file after dropping priviledges
# pidfile2        = /code/run/uwsgi.pid
# statistics socket for uwsgitop
#stats           = /code/run/stats.socket
# user/group settings
uid             = faucet
gid             = faucet
#chown-socket    = {{ xmrto_webapp_user }}:www-data
#chmod-socket    = 664
# clear environment on exit
vacuum          = true
# logging
logdate         = true
#logto2          = /code/log/uwsgi.log
disable-logging = true
# terminate if app crashes
need-app        = true
# automatically kill workers if master dies (can be dangerous for availability)
no-orphans      = true
# set the maximum time (in seconds) we wait for workers and other processes to die during reload/shutdown
reload-mercy    = 8
# reload workers after the specified amount of managed requests
max-requests    = 2000
# limit processes address space/vsz (megabytes)
#limit-as        = $(UWSGI_LIMIT_AS)
# reload if address space is higher than specified megabytes
#reload-on-as    = $(UWSGI_RELOAD_ON_AS)
# reload if rss memory is higher than specified megabytes
#reload-on-rss   = $(UWSGI_RELOAD_ON_RSS)
